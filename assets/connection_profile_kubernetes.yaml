name: connection-profile

#
# Any properties with an "x-" prefix will be treated as application-specific, exactly like how naming
# in HTTP headers or swagger properties work. The SDK will simply ignore these fields and leave
# them for the applications to process. This is a mechanism for different components of an application
# to exchange information that are not part of the standard schema described below. In particular,
# the "x-type" property with the "hlfv1" value example below is used by Hyperledger Composer to
# determine the type of Fabric networks (v0.6 vs. v1.0) it needs to work with.
#
x-type: "hlfv1"
x-loggingLevel: info

#
# Describe what the target network is/does.
#
description: "The UC4 production network."

#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: 1.2.0 # TODO

client:
  organization: org1
  connection:
    timeout:
      peer:
        endorser: '300'

#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:
  # name of the channel
  mychannel:
    # Required. list of orderers designated by the application to use for transactions on this
    # channel. This list can be a result of access control ("org1" can only access "ordererA"), or
    # operational decisions to share loads from applications among the orderers.  The values must
    # be "names" of orgs defined under "organizations/peers"
    orderers:
      - orderer-org0

    # Required. list of peers from participating orgs
    peers:
      peer1-org1:
        # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
        # have the chaincode installed. The app can also use this property to decide which peers
        # to send the chaincode install request. Default: true
        endorsingPeer: true

        # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
        # installed. The app can also use this property to decide which peers to send the
        # chaincode install request. Default: true
        chaincodeQuery: true

        # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
        # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

        # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
        # produce events but the app typically only needs to connect to one to listen to events.
        # Default: true
        eventSource: true

      peer2-org1:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer1-org2:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

      peer2-org2:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

#
# list of participating organizations in this network
#
organizations:
  org1:
    mspid: org1MSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    # cryptoPath:  peerOrganizations/org1.example.com/users/{username}@org1.example.com/msp
    # cryptoPath: "/tmp/hyperledger/org1/msp"

    peers:
      - peer1-org1
      - peer2-org1

  # the profile will contain public information about organizations other than the one it belongs to.
  # These are necessary information to make transaction lifecycles work, including MSP IDs and
  # peers with a public URL to send transaction proposals. The file will not contain private
  # information reserved for members of the organization, such as admin key and certificate,
  # fabric-ca registrar enroll ID and secret, etc.
  org2:
    mspid: org2MSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    # cryptoPath: "/tmp/hyperledger/org2/msp"

    peers:
      - peer1-org2
      - peer2-org2

  # Orderer Org name
  org0:
    # Membership Service Provider ID for this organization
    mspID: org0MSP

    # Needed to load users crypto keys and certs for this org (absolute path or relative to global crypto path, DEV mode)
    # cryptoPath: "/tmp/hyperledger/org0/msp"


#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer-org0:
    url: grpcs://_grpcs._tcp.orderer-org0.hlf

    grpcOptions:
      ssl-target-name-override: orderer-org0
      grpc.http2.keepalive_time: 15
      negotiationType: TLS
      sslProvider: openSSL
      hostnameOverride: orderer-org0

    tlsCACerts:
      # Certificate location absolute path
      path: "/var/lib/hyperledger/data/api/ca-cert.pem"

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#

peers:
  peer1-org1:
    # this URL is used to send endorsement and query requests
    url: grpcs://_grpcs._tcp.peer1-org1.hlf

    grpcOptions:
      ssl-target-name-override: peer1-org1
      grpc.http2.keepalive_time: 15
      negotiationType: TLS
      sslProvider: openSSL
      hostnameOverride: peer1-org1

    tlsCACerts:
      # Certificate location absolute path
      path: "/var/lib/hyperledger/data/api/ca-cert.pem"


  peer2-org1:
    # this URL is used to send endorsement and query requests
    url: grpcs://_grpcs._tcp.peer2-org1.hlf

    grpcOptions:
      ssl-target-name-override: peer2-org1
      grpc.http2.keepalive_time: 15
      negotiationType: TLS
      sslProvider: openSSL
      hostnameOverride: peer2-org1

    tlsCACerts:
      # Certificate location absolute path
      path: "/var/lib/hyperledger/data/api/ca-cert.pem"


  peer1-org2:
    # this URL is used to send endorsement and query requests
    url: grpcs://_grpcs._tcp.peer1-org2.hlf

    grpcOptions:
      ssl-target-name-override: peer1-org2
      grpc.http2.keepalive_time: 15
      negotiationType: TLS
      sslProvider: openSSL
      hostnameOverride: peer1-org2

    tlsCACerts:
      # Certificate location absolute path
      path: "/var/lib/hyperledger/data/api/ca-cert.pem"


  peer2-org2:
    # this URL is used to send endorsement and query requests
    url: grpcs://_grpcs._tcp.peer2-org2.hlf

    grpcOptions:
      ssl-target-name-override: peer2-org2
      grpc.http2.keepalive_time: 15
      negotiationType: TLS
      sslProvider: openSSL
      hostnameOverride: peer2-org2

    tlsCACerts:
      # Certificate location absolute path
      path: "/var/lib/hyperledger/data/api/ca-cert.pem"

